class Time:
    def __init__(self, hours=0, minutes=0, seconds=0):
        """Initialize time in hours, minutes, and seconds."""
        self.hours = hours
        self.minutes = minutes
        self.seconds = seconds
        self.normalize_time()

    def normalize_time(self):
        """Normalize the time such that minutes and seconds are within correct ranges."""
        if self.seconds >= 60:
            self.minutes += self.seconds // 60
            self.seconds = self.seconds % 60
        
        if self.minutes >= 60:
            self.hours += self.minutes // 60
            self.minutes = self.minutes % 60
        
        # Normalize negative time values (if any)
        if self.seconds < 0:
            self.minutes -= 1
            self.seconds += 60
        if self.minutes < 0:
            self.hours -= 1
            self.minutes += 60
        if self.hours < 0:
            raise ValueError("Time cannot be negative.")
    
    def __repr__(self):
        """String representation of the time in 'HH:MM:SS' format."""
        return f"{self.hours:02}:{self.minutes:02}:{self.seconds:02}"

    def add(self, other):
        """Add two Time objects."""
        total_seconds = self.to_seconds() + other.to_seconds()
        return Time.from_seconds(total_seconds)

    def subtract(self, other):
        """Subtract two Time objects."""
        total_seconds = self.to_seconds() - other.to_seconds()
        if total_seconds < 0:
            raise ValueError("Resulting time cannot be negative.")
        return Time.from_seconds(total_seconds)

    def to_seconds(self):
        """Convert time to total seconds."""
        return self.hours * 3600 + self.minutes * 60 + self.seconds

    @classmethod
    def from_seconds(cls, total_seconds):
        """Create a Time object from total seconds."""
        hours = total_seconds // 3600
        minutes = (total_seconds % 3600) // 60
        seconds = total_seconds % 60
        return cls(hours, minutes, seconds)

# Example usage
if __name__ == "__main__":
    # Creating time objects
    time1 = Time(1, 45, 30)  # 1 hour, 45 minutes, 30 seconds
    time2 = Time(0, 50, 45)  # 0 hours, 50 minutes, 45 seconds

    # Displaying the time objects
    print(f"Time 1: {time1}")
    print(f"Time 2: {time2}")

    # Addition of time1 and time2
    added_time = time1.add(time2)
    print(f"Time 1 + Time 2: {added_time}")

    # Subtraction of time1 and time2
    subtracted_time = time1.subtract(time2)
    print(f"Time 1 - Time 2: {subtracted_time}")

    # Adding time1 to itself
    added_time_self = time1.add(time1)
    print(f"Time 1 + Time 1: {added_time_self}")
